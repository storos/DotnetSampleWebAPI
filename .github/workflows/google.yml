name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: techpo-cluster
  GKE_ZONE: europe-west3-a
  DEPLOYMENT_NAME: dotnetsamplewebapi-dep
  IMAGE: dotnetsamplewebapi
  TAG: 0.0.1

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    # Build the Docker image
    - name: Build and Tag
      run: |-
        docker build --tag $IMAGE:$GITHUB_SHA .
        docker tag $IMAGE:$GITHUB_SHA gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        
    - name: Setup Google Cloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker

    - name: GET GKE Credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
        
    # Push the Docker image to Google Artifact Registry
    - name: Push Image
      run: |-
        docker push gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
      
    # Configure GCloud and kubectl
    - name: Configure GCloud and Kubernetes
      run: |-
        gcloud components install gke-gcloud-auth-plugin
        gcloud container clusters get-credentials $GKE_CLUSTER
    
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f ./Pipeline/
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
